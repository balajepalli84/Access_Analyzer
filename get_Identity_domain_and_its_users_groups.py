import oci
import requests
import time
import sys
import json
# Initialize the OCI Config
config = oci.config.from_file()

# Create the Identity Client
identity_client = oci.identity.IdentityClient(config)

# List all identity domains in your tenancy
compartment_id = config['tenancy']
domains = identity_client.list_domains(compartment_id).data
access_token = 'eyJ4NXQjUzI1NiI6IjBXdmZSS3hHZFBtbW5JNjl2QXdDS2JCNkliaHEzTjNJUHpTb1hNYjdyQlUiLCJ4NXQiOiJsc1lDaHVNbnNlTFg1QlpfYUJ0R2xpQzZtVE0iLCJraWQiOiJTSUdOSU5HX0tFWSIsImFsZyI6IlJTMjU2In0.eyJ1c2VyX3R6IjoiQW1lcmljYVwvQ2hpY2FnbyIsInN1YiI6InJhbWVzaC5iYWxhamVwYWxsaUBvcmFjbGUuY29tIiwidXNlcl9sb2NhbGUiOiJlbiIsInNpZGxlIjo0ODAsInVzZXIudGVuYW50Lm5hbWUiOiJpZGNzLThkZDMwNzc0Nzk0NjQ5MWNiZmUxYjdhM2YwNjNkYjBkIiwib25CZWhhbGZPZlVzZXIiOnRydWUsImlzcyI6Imh0dHBzOlwvXC9pZGVudGl0eS5vcmFjbGVjbG91ZC5jb21cLyIsImRvbWFpbl9ob21lIjoidXMtYXNoYnVybi0xIiwiY2Ffb2NpZCI6Im9jaWQxLnRlbmFuY3kub2MxLi5hYWFhYWFhYWEzcW1qeHI0M3RqZXh4NzVyNmd3azZ2ancyMmVybW9oYncydmJ4eWhjemtzZ2ppcjd4ZHEiLCJ1c2VyX3RlbmFudG5hbWUiOiJpZGNzLThkZDMwNzc0Nzk0NjQ5MWNiZmUxYjdhM2YwNjNkYjBkIiwiY2xpZW50X2lkIjoidGUiLCJ1c2VyX2lzQWRtaW4iOnRydWUsImRvbWFpbl9pZCI6Im9jaWQxLmRvbWFpbi5vYzEuLmFhYWFhYWFheG5qNmN2Z2dxMjNubWZmcGIyeGVrcnFlenZ5enRrc3RkNmZmaGp3NGdscnd1eGZxMm96cSIsInN1Yl90eXBlIjoidXNlciIsInNjb3BlIjoidXJuOm9wYzppZG06Zy5pZGVudGl0eXNvdXJjZXRlbXBsYXRlX3IgdXJuOm9wYzppZG06dC5hcHByb3ZhbHdvcmtmbG93IHVybjpvcGM6aWRtOnQuZ3JvdXBzLm1lbWJlcnMgdXJuOm9wYzppZG06dC5hcHAgdXJuOm9wYzppZG06dC51c2VyLmxvY2tlZHN0YXRlY2hhbmdlciB1cm46b3BjOmlkbTp0LmlkYnJpZGdlLmFkbWluIHVybjpvcGM6aWRtOnQudGVybXNvZnVzZSB1cm46b3BjOmlkbTp0LmlkY3NycHRzIHVybjpvcGM6aWRtOnQudXNlci5zZWNyZXRrZXkgdXJuOm9wYzppZG06dC5yZXF1ZXN0cyB1cm46b3BjOmlkbTp0LnVzZXIubWFuYWdlciB1cm46b3BjOmlkbTp0LmRyZyB1cm46b3BjOmlkbTp0LnNlc3Npb24gdXJuOm9wYzppZG06dC5oZWxwZGVzay5zZWN1cml0eSB1cm46b3BjOmlkbTp0LnNlY3VyaXR5LmNsaWVudCB1cm46b3BjOmlkbTpnLmFwcHRlbXBsYXRlX3IgdXJuOm9wYzppZG06dC5idWxrLnVzZXIgdXJuOm9wYzppZG06dC5kaWFnbm9zdGljc19yIHVybjpvcGM6aWRtOnQuaWRiX2NvbnRhaW5lcnMgdXJuOm9wYzppZG06dC5pZGJyaWRnZS51c2VyIHVybjpvcGM6aWRtOnQucmFkaXVzcHJveHkgdXJuOm9wYzppZG06dC51c2VyLm1lIHVybjpvcGM6aWRtOnQuYWRhcHRpdmUgdXJuOm9wYzppZG06Zy5hbGxfciB1cm46b3BjOmlkbTp0LnVzZXIuc2VjdXJpdHkgdXJuOm9wYzppZG06dC5hdWRpdF9yIHVybjpvcGM6aWRtOnQuam9iLmFwcCB1cm46b3BjOmlkbTp0LnVzZXIubWUucGFzc3dvcmR2YWxpZGF0b3IgdXJuOm9wYzppZG06dC5zb21pIHVybjpvcGM6aWRtOmcuc2hhcmVkZmlsZXMgdXJuOm9wYzppZG06dC5oZWxwZGVzay51c2VyIHVybjpvcGM6aWRtOnQudXNlci5kYmNyZWRlbnRpYWwgdXJuOm9wYzppZG06dC5yZXMuaW1wb3J0ZXhwb3J0IHVybjpvcGM6aWRtOnQuam9iLmlkZW50aXR5IHVybjpvcGM6aWRtOnQuY3VzdG9tY2xhaW1zIHVybjpvcGM6aWRtOnQuc2FtbCB1cm46b3BjOmlkbTp0Lm1mYSB1cm46b3BjOmlkbTp0LmRiLmFkbWluIHVybjpvcGM6aWRtOnQudXNlci5hcGlrZXkgdXJuOm9wYzppZG06dC5zY2hlbWFzIHVybjpvcGM6aWRtOnQubWZhLnVzZXJhZG1pbiB1cm46b3BjOmlkbTp0LnVzZXIubWFuYWdlci5qb2IgdXJuOm9wYzppZG06dC5vYXV0aCB1cm46b3BjOmlkbTp0Lmdyb3VwcyB1cm46b3BjOmlkbTp0LmpvYi5pbXBvcnRleHBvcnQgdXJuOm9wYzppZG06dC5pZGJyaWRnZS51bm1hcHBlZC5pZGNzYXR0cmlidXRlcyB1cm46b3BjOmlkbTp0LmtyYi5hZG1pbiB1cm46b3BjOmlkbTp0Lm5hbWVkYXBwYWRtaW4gdXJuOm9wYzppZG06dC5ibGtycHRzIHVybjpvcGM6aWRtOnQuc2VsZnJlZ2lzdHJhdGlvbnByb2ZpbGUgdXJuOm9wYzppZG06dC51c2VyLmF1dGhlbnRpY2F0ZSB1cm46b3BjOmlkbTp0LmdyYW50cyB1cm46b3BjOmlkbTp0Lm9hdXRodG9rZW4gdXJuOm9wYzppZG06dC5hdXRoZW50aWNhdGlvbiB1cm46b3BjOmlkbTp0LmNvbnRhaW5lciB1cm46b3BjOmlkbTp0LmltYWdlcyB1cm46b3BjOmlkbTp0LmJ1bGsgdXJuOm9wYzppZG06dC51c2VyLm9hdXRoMmNsaWVudGNyZWQgdXJuOm9wYzppZG06dC5kZWxlZ2F0ZWQuZ3JvdXAubWVtYmVycyB1cm46b3BjOmlkbTp0LmpvYi5zZWFyY2ggdXJuOm9wYzppZG06dC5pZGJyaWRnZSB1cm46b3BjOmlkbTp0LnVzZXIuZGJsb2dpbnVwZGF0ZXIgdXJuOm9wYzppZG06dC51c2VyLmF1dGh0b2tlbiB1cm46b3BjOmlkbTp0LnVzZXIuc210cGNyZWRlbnRpYWwgdXJuOm9wYzppZG06dC5zZXR0aW5ncyB1cm46b3BjOmlkbTp0LnVzZXIubWFuYWdlci5zZWN1cml0eSB1cm46b3BjOmlkbTp0LmFwcHJvdmFsd29ya2Zsb3cuYXNzaWdubWVudCB1cm46b3BjOmlkbTp0LmNsb3VkZ2F0ZSB1cm46b3BjOmlkbTp0LmlkYnJpZGdlLnNvdXJjZWV2ZW50IHVybjpvcGM6aWRtOnQuc3Vkb3JvbGUgdXJuOm9wYzppZG06dC51c2VyLmNhcGFiaWxpdGllc191IHVybjpvcGM6aWRtOnQucG9saWN5IHVybjpvcGM6aWRtOnQudXNlcnMgdXJuOm9wYzppZG06dC5yZXBvcnRzIHVybjpvcGM6aWRtOnQudXNlci5zdXBwb3J0YWNjb3VudCB1cm46b3BjOmlkbTp0LnNlc3Npb24ucmV2b2tlIHVybjpvcGM6aWRtOmcuaWRjc3JwdHNtZXRhX3IiLCJ1c2VyX29jaWQiOiJvY2lkMS51c2VyLm9jMS4uYWFhYWFhYWFmYXE3dmg3Mnh5eTNnajQ3dm9vaWM2aGk3YTJ3MnR2a3pwbGdjamxvaGU3YWF3YTRuNmVhIiwiY2xpZW50X3RlbmFudG5hbWUiOiJpZGNzLThkZDMwNzc0Nzk0NjQ5MWNiZmUxYjdhM2YwNjNkYjBkIiwicmVnaW9uX25hbWUiOiJ1cy1hc2hidXJuLWlkY3MtMSIsInVzZXJfbGFuZyI6ImVuIiwidXNlckFwcFJvbGVzIjpbIkF1dGhlbnRpY2F0ZWQiLCJHbG9iYWwgVmlld2VyIiwiSWRlbnRpdHkgRG9tYWluIEFkbWluaXN0cmF0b3IiXSwiZXhwIjoxNzIyNDQ1OTA2LCJpYXQiOjE3MjIyNjU5MDYsImNsaWVudF9ndWlkIjoidGUiLCJjbGllbnRfbmFtZSI6InRlIiwidGVuYW50IjoiaWRjcy04ZGQzMDc3NDc5NDY0OTFjYmZlMWI3YTNmMDYzZGIwZCIsImp0aSI6IjlmNDlmZTVlZWY4YTRiNzY4MGU2NjYzYzA5NjBjYzhlIiwiZ3RwIjoidGUiLCJ1c2VyX2Rpc3BsYXluYW1lIjoiUmFtZXNoIEJhbGFqZXBhbGxpIiwib3BjIjpmYWxzZSwic3ViX21hcHBpbmdhdHRyIjoidXNlck5hbWUiLCJwcmltVGVuYW50IjpmYWxzZSwidG9rX3R5cGUiOiJBVCIsImF1ZCI6WyJ1cm46b3BjOmxiYWFzOmxvZ2ljYWxndWlkPWlkY3MtOGRkMzA3NzQ3OTQ2NDkxY2JmZTFiN2EzZjA2M2RiMGQiLCJodHRwczpcL1wvaWRjcy04ZGQzMDc3NDc5NDY0OTFjYmZlMWI3YTNmMDYzZGIwZC5pZGVudGl0eS5vcmFjbGVjbG91ZC5jb20iLCJodHRwczpcL1wvaWRjcy04ZGQzMDc3NDc5NDY0OTFjYmZlMWI3YTNmMDYzZGIwZC51cy1hc2hidXJuLWlkY3MtMS5zZWN1cmUuaWRlbnRpdHkub3JhY2xlY2xvdWQuY29tIl0sImNhX25hbWUiOiJvY2lhdGVhbSIsInVzZXJfaWQiOiI3ODYyYWVmYzdlZWY0MDk1ODk1MzMwMmUyZTc0NTMwMyIsImRvbWFpbiI6IkRlZmF1bHQiLCJjbGllbnRBcHBSb2xlcyI6WyJBdXRoZW50aWNhdGVkIENsaWVudCJdLCJ0ZW5hbnRfaXNzIjoiaHR0cHM6XC9cL2lkY3MtOGRkMzA3NzQ3OTQ2NDkxY2JmZTFiN2EzZjA2M2RiMGQuaWRlbnRpdHkub3JhY2xlY2xvdWQuY29tOjQ0MyJ9.OIO0i8RcoPfQcY1pwbqe4AvFj858dvgK8umkvOdaAMRrit1O8Ao_Lnk9k8DkH3t6nZ8qHxA0KXGET61SoMbQuTyqCpArtDA_uuyhdoJd9GWThW9ZtK8Oc4bD5U_TZlynFO0-shMo5d9SSu2GvZgYUAhDjZDi2fxFtAdTNDqejFeg492xMXrcULLnm894goNeeToOlvSVds3Z6w72ADDf4jSGkp3184rIIDsG-p_P1q9K4n-YOeX4_Ie9Q2OPEkI56QSorBrZz9H4APgpFh2k0NG7h3sLeFtP0HacsnN9KKPW7guM-EjVw4iXATDC7-bUrl_h3k0gZqT2p6-YrClPtA'

def list_domain_users(domain):
    identity_domains_client = oci.identity_domains.IdentityDomainsClient(config, domain.url)
    users = []
    next_page = None
    while True:
        response = identity_domains_client.list_users(
            attribute_sets=['all'],
            limit=100,
            page=next_page 
        )
        for user in response.data.resources:
            user_groups=[]
            if user.groups is not None:
                for group in user.groups:                    
                    user_groups.append(group.display)

            user_info = {
                'domain_display_name': domain.display_name,
                'domain_url': domain.url,
                'display_name': user.display_name,
                'user_name': user.user_name,
                'user_ocid':user.ocid,
                'groups': user_groups
            }
            users.append(user_info)
        if not response.has_next_page:
            break
        next_page = response.next_page
    return users






# Loop over each domain and fetch users
all_users = []
for domain in domains:
    print(f"Fetching users for domain: {domain.display_name}")
    domain_users = list_domain_users(domain)
    all_users.extend(domain_users)

with open(r'C:\Security\Blogs\Access_Analyzer\logs\user_groups_output.txt', 'w') as file:
    file.write(f"{all_users}")
# Print out user information for verification

